name: Deploy

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
    
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
        env:
          PG_HOST: localhost
          PG_PORT: 5432
          PG_DATABASE: node_api_example_test
          PG_USER: postgres
          PG_PASSWORD: password
          NODE_ENV: test
          PORT: 3001
      
      # Cette étape est un placeholder - ajustez selon votre environnement de déploiement
      - name: Deploy to development
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Déploiement vers l'environnement de développement"
          # Ajoutez ici vos commandes de déploiement réelles
          # Par exemple: rsync, scp, aws cli, etc.

      # Cette étape est un placeholder - ajustez selon votre environnement de déploiement
      - name: Deploy to production
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "Déploiement vers l'environnement de production"
          # Ajoutez ici vos commandes de déploiement réelles
          # Par exemple: rsync, scp, aws cli, etc.

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            LICENSE
            README.md
          body_path: ${{ github.workspace }}/CHANGELOG.md
          draft: false
          prerelease: false
